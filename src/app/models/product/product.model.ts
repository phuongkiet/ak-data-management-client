import { CalculatedUnitDto } from "./calculatedUnit.model.ts";
import { ProductColorDto } from "./productColor.model.ts";
import { CompanyCodeDto } from "./companyCode.model.ts";
import { ProductAreaDto } from "./productArea.model.ts";
import { ProductBodyColorDto } from "./productBodyColor.model.ts";
import { ProductAntiSlipperyDto } from "./productAntiSlippery.model.ts";
import { PriceDetermination, NoticeDataWebsite, UploadWebsiteStatus, DiscountConditions } from "./enum/product.enum.ts";
import { ProductMaterialDto } from "./productMaterial.model.ts";
import { ProductFactoryDto } from "./productFactory.model.ts";
import { ProductOriginDto } from "./productOrigin.model.ts";
import { ProductSizeDto } from "./productSize.model.ts";
import { ProductProcessingDto } from "./productProcessing.model.ts";
import { ProductPatternDto } from "./productPattern.model.ts";
import { ProductStorageDto } from "./productStorage.model.ts";
import { ProductSupplierDto } from "./productSupplier.model.ts";
import { ProductSurfaceDto } from "./productSurface.model.ts";
import { ProductWaterAbsorptionDto } from "./productWaterAbsorption.model.ts";
import { SupplierTaxDto } from "./supplierTax.model.ts";
import { RoleDto } from "../role/role.model.ts";
import { SettingDto } from "../setting.model.ts";

export interface ProductDto {
  id: number;
  createdDate: string; // DateTime => string (ISO format)
  updatedAt: string;
  supplierItemCode: string;
  confirmSupplierItemCode: string;
  confirmSupplierCode?: string;
  confirmProductCode: string;
  confirmAutoBarCode: string;
  displayWebsiteName: string;
  productPrice?: number;
  discountedPrice?: number;
  autoCalculatedUnit: string;
  productSpecialNote: string;
  autoGeneratedSize: string;
  weightPerUnit: number;
  weightPerBox: number;
  quantityPerBox: number;
  areaPerUnit: number;
  areaPerBox: number;
  waterAbsorption: number;
  patternQuantity: number;
  brickPatternShortName: string;
  deliveryEstimatedDate: string;
  creator: string;
  modifier: string;
  sapoName: string;

  // Foreign key display names
  originCountryName: string;
  actualSizeName: string;
  brickPatternName: string;
  colorName: string;
  surfaceFeatureName: string;
  materialName: string;
  brickBodyName: string;
  storageName: string;
  antiSlipLevelName: string;
  companyCode: string;
  supplierName: string;
  supplierCode: string;
  productProcessingCode: string;
  processingDescription: string;

  // Enum values as strings
  priceDetermination: string;
  noticeDataWebsite: string;
  uploadWebsiteStatus: string;
}

export interface StrategyProductDto {
  id: number;
  companyItemCode: string;
  supplierItemCode: string;
  confirmSupplierItemCode: string;
  size: string;
  supplierName: string;
  displayWebsiteName: string;

  webProductPrice?: number;
  webDiscountedPrice?: number;
  webSecondDiscountedPrice?: number;

  listPrice?: number;
  retailPrice?: number; 
  policyStandard?: number;
}

export interface StrategyProductDetailDto {
  id: number;
  autoBarcode: string;
  companyItemCode: string;
  supplierItemCode: string;
  size: string;
  supplierName: string;
  displayWebsiteName: string;

  webProductPrice?: number;
  webDiscountedPrice?: number;
  webSecondDiscountedPrice?: number;

  quantityPerBox: number;
  weightPerBox: number;
  areaPerBox: number;
  weightPerUnit: number;
  changedUnit: string; // "vien"
  area: number; // m2 / vien
  calculatedUnit: string; // "m2"

  listPrice?: number;
  supplierRisingPrice?: number;
  otherPriceByCompany?: number;
  confirmListPrice?: number;

  taxId: number;
  taxStatus: string;
  taxRate: number; // percentage
  taxRateNumber: number; // 1. percentage
  shippingFee?: number;
  discount?: number;

  supplierEstimatedPayableAmount?: number;
  retailPrice?: number; // Giá lẻ chưa khuyến mãi

  policyStandard: number;
  policyStandardNumber: number; // 1. percentage
  supplierDiscountCash?: number;
  supplierDiscountPercentage?: number;
  estimatedPurchasePriceAfterSupplierDiscount?: number;

  firstRemainingPriceAfterDiscount?: number;
  firstPolicyStandardAfterDiscount?: number;
  firstFixedPolicyPrice?: number;
  firstActualReceivedPriceAfterPolicyDiscount?: number;

  secondRemainingPriceAfterDiscount?: number;
  secondPolicyStandardAfterDiscount?: number;
  secondFixedPolicyPrice?: number;
  secondActualReceivedPriceAfterPolicyDiscount?: number;

  supplierId: number;
}

export interface ProductDetail {
  id: number;
  createdDate: string; // vẫn giữ là string nếu bạn không parse sang Date

  supplierId: number;
  supplierCode: string;
  supplierItemCode: string;
  confirmSupplierItemCode: string;
  confirmSupplierCode?: string;
  productOrderNumber?: number;
  productCode?: string;
  confirmProductCode: string;
  autoBarCode: string;
  confirmAutoBarCode: string;
  displayWebsiteName: string;
  productPrice?: number;
  discountedPrice?: number;
  secondDiscountedPrice?: number;
  productSpecialNote: string;
  diameterSize?: number;
  wideSize: number;
  lengthSize: number;
  thicknessSize: number;
  otherSize?: number;
  autoGeneratedSize: string;
  weightPerUnit: number;
  weightPerBox: number;
  quantityPerBox: number;
  areaPerUnit: number;
  areaPerBox: number;
  porcelainWarrantyPeriod: number;
  accessoryWarrantyPeriod: number;
  waterAbsorption: number;
  patternQuantity: number;
  isInside: boolean;
  isOutside: boolean;
  isFlooring: boolean;
  isWalling: boolean;
  isCOCQ: boolean;
  isScratchResist: boolean;
  isAntiFouling: boolean;
  isEdgeGrinding: boolean;
  hardnessMOHS: number;
  brickPatternShortName: string;
  otherNote: string;
  deliveryEstimatedDate: string;
  autoCalculatedUnit: string;
  sapoName: string;
  confirmListPrice: number | null ;
  retailPrice: number | null;

  originCountryId: number;
  actualSizeId: number;
  brickPatternId: number;
  colorId: number;
  surfaceFeatureId: number;
  materialId: number;
  brickBodyId: number;
  storageId: number;
  antiSlipId: number;
  waterAbsorptionId: number;
  taxId: number | null;
  taxRate: number;
  calculatedUnitId: number;
  companyCodeId: number;
  productProcessingId: number[];
  productFactoryId: number | null;

  priceDetermination: PriceDetermination;
  noticeDataWebsite: NoticeDataWebsite;
  uploadWebsiteStatus: UploadWebsiteStatus;
  discountConditions?: DiscountConditions;
  secondDiscountConditions?: DiscountConditions;

  processingDescription: string;
}

export interface AddProductDto {
  // Foreign Keys
  originCountryId: number | null; 
  actualSizeId: number | null;
  brickPatternId: number | null;
  colorId: number | null;
  surfaceFeatureId: number | null;
  materialId: number | null;
  brickBodyId: number | null;
  storageId: number | null;
  antiSlipId: number | null;
  supplierId: number | null;
  companyCodeId: number | null;
  productProcessingId: number[] | null;
  waterAbsorptionId: number | null;
  taxId: number | null;
  calculatedUnitId: number | null;
  productFactoryId: number | null;

  // Enum values
  priceDetermination: PriceDetermination;
  noticeDataWebsite: NoticeDataWebsite;
  uploadWebsiteStatus: UploadWebsiteStatus;
  discountConditions: DiscountConditions | null;
  secondDiscountConditions: DiscountConditions | null;

  // Basic info
  supplierItemCode: string;
  confirmSupplierItemCode: string;
  supplerCode: string;
  productOrderNumber?: number;
  productCode: string;
  autoBarCode: string;
  displayWebsiteName: string;
  webProductPrice: number | null;
  webDiscountedPrice: number | null;
  secondWebDiscountedPrice: number | null;
  autoCalculatedUnit: string;
  calculatedUnit: string;
  productSpecialNote: string;
  diameterSize?: number;
  thicknessSize: number;
  weightPerUnit: number;
  weightPerBox: number;
  quantityPerBox: number;
  porcelainWarrantyPeriod?: number;
  accessoryWarrantyPeriod?: number;
  patternQuantity: number | null;
  isInside: boolean;
  isOutside: boolean;
  isFlooring: boolean;
  isWalling: boolean;
  isCOCQ: boolean;
  isScratchResist: boolean;
  isAntiFouling: boolean;
  isEdgeGrinding: boolean;
  hardnessMOHS: number | null;
  otherNote: string;
  deliveryEstimatedDate: string;
  sapoName: string;
}

export interface EditProductDto {
  id: number;
  priceDetermination?: PriceDetermination | null;
  noticeDataWebsite?: NoticeDataWebsite | null;
  uploadWebsiteStatus?: UploadWebsiteStatus | null;
  discountConditions?: DiscountConditions | null;
  secondDiscountConditions?: DiscountConditions | null;

  originCountryId?: number | null;
  actualSizeId?: number | null;
  brickPatternId?: number | null;
  colorId?: number | null;
  surfaceFeatureId?: number | null;
  materialId?: number | null;
  brickBodyId?: number | null;
  storageId?: number | null;
  antiSlipId?: number | null;
  supplierId?: number | null;
  companyCodeId?: number | null;
  productProcessingId?: number[] | null;
  waterAbsorptionId?: number | null;
  taxId?: number | null;
  calculatedUnitId?: number | null;
  productFactoryId?: number | null;

  realSupplierName?: string | null;
  supplierItemCode?: string | null;
  confirmSupplierItemCode?: string | null;
  supplierCode?: string | null;
  confirmSupplierCode?: string | null;
  productOrderNumber?: number | null;
  productCode?: string | null;
  confirmProductCode?: string | null;
  autoBarCode?: string | null;
  confirmAutoBarCode?: string | null;
  displayWebsiteName?: string | null;

  webProductPrice?: number | null;
  webDiscountedPrice?: number | null;
  webSecondDiscountedPrice?: number | null;
  listPrice?: number | null;
  supplierRisingPrice?: number | null;
  otherPriceByCompany?: number | null;
  confirmListPrice?: number | null;
  shippingFee?: number | null;
  discount?: number | null;
  supplierEstimatedPayableAmount?: number | null;
  retailPrice?: number | null;
  policyStandard?: number | null;
  supplierDiscountCash?: number | null;
  supplierDiscountPercentage?: number | null;
  estimatedPurchasePriceAfterSupplierDiscount?: number | null;
  firstRemainingPriceAfterDiscount?: number | null;
  firstPolicyStandardAfterDiscount?: number | null;
  firstFixedPolicyPrice?: number | null;
  firstActualReceivedPriceAfterPolicyDiscount?: number | null;
  secondRemainingPriceAfterDiscount?: number | null;
  secondPolicyStandardAfterDiscount?: number | null;
  secondFixedPolicyPrice?: number | null;
  secondActualReceivedPriceAfterPolicyDiscount?: number | null;

  productSpecialNote?: string | null;
  diameterSize?: number | null;
  thicknessSize?: number | null;
  otherSize?: number | null;
  weightPerUnit?: number | null;
  weightPerBox?: number | null;
  quantityPerBox?: number | null;
  areaPerUnit?: number | null;
  areaPerBox?: number | null;
  porcelainWarrantyPeriod?: number | null;
  accessoryWarrantyPeriod?: number | null;
  patternQuantity?: number | null;

  isInside?: boolean | null;
  isOutside?: boolean | null;
  isFlooring?: boolean | null;
  isWalling?: boolean | null;
  isCOCQ?: boolean | null;
  isScratchResist?: boolean | null;
  isAntiFouling?: boolean | null;
  isEdgeGrinding?: boolean | null;

  hardnessMOHS?: number | null;
  brickPatternShortName?: string | null;
  otherNote?: string | null;
  deliveryEstimatedDate?: string | null;
  productSpecialExtraNote?: string | null;
  sapoName?: string | null;
}

export interface SupplierSizeCombinationDto {
  supplierId: number;
  sizeId: number;
}

export interface ProductMetadataDto {
  companyCodeDtos: CompanyCodeDto[];
  calculatedUnitDtos: CalculatedUnitDto[];
  productAntiSlipperyDtos: ProductAntiSlipperyDto[];
  productAreaDtos: ProductAreaDto[];
  productBodyColorDtos: ProductBodyColorDto[];
  productColorDtos: ProductColorDto[];
  productFactoryDtos: ProductFactoryDto[];
  productMaterialDtos: ProductMaterialDto[];
  productOriginDtos: ProductOriginDto[];
  productPatternDtos: ProductPatternDto[];
  productProcessingDtos: ProductProcessingDto[];
  productSizeDtos: ProductSizeDto[];
  productStorageDtos: ProductStorageDto[];
  productSupplierDtos: ProductSupplierDto[];
  productSurfaceDtos: ProductSurfaceDto[];
  waterAbsoroptionDtos: ProductWaterAbsorptionDto[];
  supplierTaxDtos: SupplierTaxDto[];
  roleDtos: RoleDto[];
  totalProducts: number;
  totalPricedProducts: number;
  supplierSizeCombinationDtos: SupplierSizeCombinationDto[];
  settingDto: SettingDto | null;
}

export interface EditStrategyProductDto {
  listPrice: number | null;
  supplierRisingPrice: number | null;
  otherPriceByCompany: number | null;
  shippingFee: number | null;
  discount: number | null;
  policyStandard: number | null;
  supplierDiscountCash: number | null;
  supplierDiscountPercentage: number | null;
  firstPolicyStandardAfterDiscount: number | null;
  secondPolicyStandardAfterDiscount: number | null;
  taxId: number | null;
  taxRate: number | null;
  quantityPerBox: number | null;
  weightPerUnit: number | null;
}

export interface EditBulkStrategyProductDto {
  ids: number[];
  editStrategyProductDto: EditStrategyProductDto;
}

export interface CalculateProcessingPriceResponse {
  // Basic information
  processingCost: number;
  // New dimension information
  processedDimensions: string; // Example: "10x120 cm"
  processedAreaM2: number;    // Area in m2 of one processed piece

  // Price information per piece
  retailPricePerPiece: number;
  webPricePerPiece: number;
}

export interface CalculateProcessingPriceRequest {
  productId: number;
  processingId: number;
  quantity: number;
}








