import { PriceDetermination, NoticeDataWebsite, UploadWebsiteStatus, DiscountConditions } from "./enum/product.enum.ts";

export interface ProductDto {
  id: number;
  createdDate: string; // DateTime => string (ISO format)
  updatedAt: string;
  confirmSupplierItemCode: string;
  confirmSupplierCode?: string;
  confirmProductCode: string;
  confirmAutoBarCode: string;
  displayWebsiteName: string;
  productPrice?: number;
  discountedPrice?: number;
  autoCalculatedUnit: string;
  productSpecialNote: string;
  autoGeneratedSize: string;
  weightPerUnit: number;
  weightPerBox: number;
  quantityPerBox: number;
  areaPerUnit: number;
  areaPerBox: number;
  waterAbsorption: number;
  patternQuantity: number;
  brickPatternShortName: string;
  deliveryEstimatedDate: string;

  // Foreign key display names
  originCountryName: string;
  actualSizeName: string;
  brickPatternName: string;
  colorName: string;
  surfaceFeatureName: string;
  materialName: string;
  brickBodyName: string;
  storageName: string;
  antiSlipLevelName: string;
  companyCode: string;
  supplierName: string;
  supplierCode: string;
  productProcessingCode: string;
  processingDescription: string;

  // Enum values as strings
  priceDetermination: string;
  noticeDataWebsite: string;
  uploadWebsiteStatus: string;
}

export interface StrategyProductDto {
  id: number;
  companyItemCode: string;
  supplierItemCode: string;
  size: string;
  supplierName: string;
  displayWebsiteName: string;

  webProductPrice?: number;
  webDiscountedPrice?: number;
  webSecondDiscountedPrice?: number;

  changedUnit: string; // "vien"
  area: number; // m2 / vien
  calculatedUnit: string; // "m2"

  listPrice?: number;
  supplierRisingPrice?: number;
  otherPriceByCompany?: number;
  confirmListPrice?: number;

  quantity?: number;
  taxStatus: string;
  taxRate: number; // percentage
  taxRateNumber: number; // 1. percentage
  shippingFee?: number;
  discount?: number;

  supplierEstimatedPayableAmount?: number;
  retailPrice?: number; // Giá lẻ chưa khuyến mãi

  policyStandard: number;
  policyStandardNumber: number; // 1. percentage
  supplierDiscountCash?: number;
  supplierDiscountPercentage?: number;
  estimatedPurchasePriceAfterSupplierDiscount?: number;

  firstRemainingPriceAfterDiscount?: number;
  firstPolicyStandardAfterDiscount?: number;
  firstFixedPolicyPrice?: number;
  firstActualReceivedPriceAfterPolicyDiscount?: number;

  secondRemainingPriceAfterDiscount?: number;
  secondPolicyStandardAfterDiscount?: number;
  secondFixedPolicyPrice?: number;
  secondActualReceivedPriceAfterPolicyDiscount?: number;
}

export interface ProductDetail {
  id: number;
  createdDate: string; // vẫn giữ là string nếu bạn không parse sang Date

  supplierId: number;
  supplierCode: string;
  supplierItemCode: string;
  confirmSupplierItemCode: string;
  confirmSupplierCode?: string;
  productOrderNumber?: number;
  productCode?: string;
  confirmProductCode: string;
  autoBarCode: string;
  confirmAutoBarCode: string;
  displayWebsiteName: string;
  productPrice?: number;
  discountedPrice?: number;
  secondDiscountedPrice?: number;
  productSpecialNote: string;
  diameterSize?: number;
  wideSize: number;
  lengthSize: number;
  thicknessSize: number;
  otherSize?: number;
  autoGeneratedSize: string;
  weightPerUnit: number;
  weightPerBox: number;
  quantityPerBox: number;
  areaPerUnit: number;
  areaPerBox: number;
  porcelainWarrantyPeriod: number;
  accessoryWarrantyPeriod: number;
  waterAbsorption: number;
  patternQuantity: number;
  isInside: boolean;
  isOutside: boolean;
  isFlooring: boolean;
  isWalling: boolean;
  isCOCQ: boolean;
  isScratchResist: boolean;
  isAntiFouling: boolean;
  isEdgeGrinding: boolean;
  hardnessMOHS: number;
  brickPatternShortName: string;
  otherNote: string;
  deliveryEstimatedDate: string;

  originCountryId: number;
  actualSizeId: number;
  brickPatternId: number;
  colorId: number;
  surfaceFeatureId: number;
  materialId: number;
  brickBodyId: number;
  storageId: number;
  antiSlipLevelId: number;
  waterAbsorptionId: number;
  taxId: number;
  taxRate: number;
  calculatedUnitId: number;
  companyCodeId: number;
  processingId: number;

  priceDetermination: PriceDetermination;
  noticeDataWebsite: NoticeDataWebsite;
  uploadWebsiteStatus: UploadWebsiteStatus;
  discountConditions?: DiscountConditions;
  secondDiscountConditions?: DiscountConditions;

  processingDescription: string;
}

export interface AddProductDto {
  // Foreign Keys
  originCountryId: number;
  actualSizeId: number;
  brickPatternId: number;
  colorId: number;
  surfaceFeatureId: number;
  materialId: number;
  brickBodyId: number;
  storageId: number;
  antiSlipId: number;
  supplierId: number;
  companyCodeId: number;
  processingId: number | null;
  waterAbsorptionId: number;
  taxId: number;
  calculatedUnitId: number;

  // Enum values
  priceDetermination: PriceDetermination;
  noticeDataWebsite: NoticeDataWebsite;
  uploadWebsiteStatus: UploadWebsiteStatus;
  discountConditions?: DiscountConditions;
  secondDiscountConditions?: DiscountConditions;

  // Basic info
  supplierItemCode: string;
  supplerCode: string;
  productOrderNumber?: number;
  productCode: string;
  autoBarCode: string;
  displayWebsiteName: string;
  webProductPrice?: number;
  webDiscountedPrice?: number;
  secondWebDiscountedPrice?: number;
  autoCalculatedUnit: string;
  calculatedUnit: string;
  productSpecialNote: string;
  diameterSize?: number;
  wideSize: number;
  lengthSize: number;
  thicknessSize: number;
  otherSize?: number;
  weightPerUnit: number;
  weightPerBox: number;
  quantityPerBox: number;
  porcelainWarrantyPeriod?: number;
  accessoryWarrantyPeriod?: number;
  patternQuantity: number | null;
  isInside: boolean;
  isOutside: boolean;
  isFlooring: boolean;
  isWalling: boolean;
  isCOCQ: boolean;
  isScratchResist: boolean;
  isAntiFouling: boolean;
  isEdgeGrinding: boolean;
  hardnessMOHS: number | null;
  otherNote: string;
  deliveryEstimatedDate: string;
}


